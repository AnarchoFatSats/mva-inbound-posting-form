version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Setting up build environment"
        - nvm use 16
        - echo "Making config injection script executable"
        - chmod +x scripts/inject-config.js
    build:
      commands:
        - echo "ðŸ”§ Starting permanent configuration solution build..."
        - echo "Using build-time config injection instead of external config.json files"
        
        # Run the configuration injection script
        - echo "Running build-time configuration injection..."
        - node scripts/inject-config.js
        
        - echo "Building application with proper structure..."
        - mkdir -p dist
        - mkdir -p dist/js
        - mkdir -p dist/dashboard
        - mkdir -p dist/dashboard/images
        
        # Copy root index.html (redirect page)
        - echo "Copying root index.html..."
        - cp index.html dist/
        
        # Copy shared resources to root
        - echo "Copying shared JS resources..."
        - cp -R js/* dist/js/ 2>/dev/null || echo "JS directory copied"
        
        # Copy dashboard files to dashboard subdirectory
        - echo "Copying dashboard files to dashboard subdirectory..."
        - cp -R dashboard/* dist/dashboard/
        
        # Copy critical root files that dashboard might reference
        - cp app.js dist/ 2>/dev/null || true
        - cp critical-path.js dist/ 2>/dev/null || true
        - cp styles.css dist/ 2>/dev/null || true
        - cp version.js dist/ 2>/dev/null || true
        
        # Ensure proper structure
        - echo "Verifying build structure..."
        - 'if [ ! -f dist/index.html ]; then echo "ERROR: No root index.html!"; exit 1; fi'
        - 'if [ ! -f dist/dashboard/index.html ]; then echo "ERROR: No dashboard index.html!"; exit 1; fi'
        - 'if [ ! -f dist/js/app-config.js ]; then echo "ERROR: No app-config.js!"; exit 1; fi'
        
        - echo "âœ… Build completed with proper structure!"
        - echo "ðŸš€ Clean architecture with proper path resolution!"
        
        # Verify build output
        - echo "=== Build Output Structure ==="
        - echo "Root contents:"
        - ls -la dist/ || true
        - echo "Dashboard contents:"
        - ls -la dist/dashboard/ || true
        - echo "JS contents:"
        - ls -la dist/js/ || true
  artifacts:
    baseDirectory: dist
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
  customHeaders:
    # HTML files - no cache for content files
    - pattern: '**/*.html'
      headers:
        - key: 'Cache-Control'
          value: 'no-cache, no-store, must-revalidate'
        - key: 'Pragma'
          value: 'no-cache'
    
    # JavaScript files - long cache (they have injected config now)
    - pattern: '**/*.js'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=31536000, immutable'
    
    # CSS files - long cache
    - pattern: '**/*.css'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=31536000, immutable'
    
    # Images - long cache
    - pattern: '**/*.{png,jpg,jpeg,gif,svg,ico}'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=31536000, immutable'
