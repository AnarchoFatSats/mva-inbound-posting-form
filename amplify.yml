version: 1
frontend:
  phases:
    preBuild:
      commands:
        - echo "Setting up build environment"
        - nvm use 16
        - echo "Making config injection script executable"
        - chmod +x scripts/inject-config.js
    build:
      commands:
        - echo "ðŸ”§ Starting permanent configuration solution build..."
        - echo "Using build-time config injection instead of external config.json files"
        
        # Run the configuration injection script
        - echo "Running build-time configuration injection..."
        - node scripts/inject-config.js
        
        - echo "Building application with injected configuration..."
        - mkdir -p dist
        - mkdir -p dist/js
        - mkdir -p dist/images
        
        # Copy the AppConfig module
        - echo "Copying AppConfig module..."
        - cp js/app-config.js dist/js/ 2>/dev/null || echo "app-config.js not found in js/"
        
        # Copy all dashboard files to ROOT of dist (this is where the app expects them)
        - echo "Copying dashboard files to root of dist..."
        - cp -R dashboard/* dist/
        
        # Also maintain dashboard directory for any relative references
        - mkdir -p dist/dashboard
        - cp -R dashboard/* dist/dashboard/
        
        # Copy other root files (but don't overwrite dashboard files)
        - cp *.css dist/ 2>/dev/null || echo "No root CSS files to copy"
        - cp *.js dist/ 2>/dev/null || echo "No root JS files to copy"
        
        # Copy entire js directory
        - cp -R js/* dist/js/ 2>/dev/null || echo "JS directory copied"
        
        # Copy version file if it exists
        - cp version.js dist/ 2>/dev/null || echo "No version.js file to copy"
        
        # Ensure index.html exists at root
        - echo "Verifying index.html exists at root..."
        - 'if [ ! -f dist/index.html ]; then echo "ERROR: No index.html at root!"; exit 1; fi'
        
        - echo "âœ… Build completed with permanent configuration solution!"
        - echo "ðŸš€ Zero external config dependencies - faster, more reliable startup!"
        
        # Verify build output
        - echo "Verifying build output structure..."
        - echo "Root directory contents:"
        - ls -la dist/ || true
        - echo "JS directory contents:"
        - ls -la dist/js/ || true
  artifacts:
    baseDirectory: dist
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
  customHeaders:
    # HTML files - no cache for content files
    - pattern: '**/*.html'
      headers:
        - key: 'Cache-Control'
          value: 'no-cache, no-store, must-revalidate'
        - key: 'Pragma'
          value: 'no-cache'
    
    # JavaScript files - long cache (they have injected config now)
    - pattern: '**/*.js'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=31536000, immutable'
    
    # CSS files - long cache
    - pattern: '**/*.css'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=31536000, immutable'
    
    # Images - long cache
    - pattern: '**/*.{png,jpg,jpeg,gif,svg,ico}'
      headers:
        - key: 'Cache-Control'
          value: 'public, max-age=31536000, immutable'
